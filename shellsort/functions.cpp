// Назначение:
//  Модуль functions.cpp предназначен для проверки ввода данных пользователем.
//  Он обеспечивает корректный ввод целочисленных и вещественных значений и сообщает пользователю о некорректных данных.
// Автор:
//  Студенты.
// Используемые алгоритмы:
//	Функция CheckInt(): Эта функция считывает целочисленное значение, введенное пользователем.
//  При обнаружении некорректных данных (например, ввод строки вместо числа), она очищает ввод и сообщает пользователю 
//  о необходимости ввести целочисленное значение. После успешного ввода функция возвращает считанное целочисленное значение.
//	Функция CheckDouble(): Эта функция считывает вещественное значение, введенное пользователем.
//  При обнаружении некорректных данных (например, ввод строки вместо числа), она очищает ввод и сообщает пользователю 
//  о необходимости ввести целочисленное значение. После успешного ввода функция возвращает считанное целочисленное значение.

#include <iostream>
#include <Windows.h>
#include <vector>
#include <time.h>

using namespace std;

// Функция CheckInt()
// Назначение: 
//  Функция для проверки корректности ввода целочисленного значения.
// Входные данные: 
//	Отсутствуют. 
// Результаты: 
//	Возвращает целочисленное значение, введенное пользователем после проверки на корректность.

int CheckInt() {
    int Check;
    cin >> Check;
    while (getchar() != '\n') { // Функция getchar возвращает следующий символ из стандартного потока ввода
        while (cin.fail()) { //проверка на ошибку предыдущего ввода со стандартного ввода (с консоли, например вместо числа ввел строку)
            cin.ignore();// Метод cin.ignore предназначен для извлечения символов из входного потока (cin). Извлеченные символы игнорируются и не используются.
            cin.clear(); // Для очистки внутреннего состояния потока. После использования cin.clear внутреннее состояние снова устанавливается на goodbit, что означает отсутствие "ошибок"
            while (getchar() != '\n');
            cout << "Ошибка ввода, значение содержит неподходящий символ. Введите число заново:" << endl;
            cin >> Check;
        }
    }
    return Check;
}

// Функция CheckDouble()// 
// Назначение: 
//	Функция для проверки корректности ввода вещественного значения.
// Входные данные: 
//	Отсутствуют. 
// Результаты: 
//  Возвращает вещественное значение, введенное пользователем после проверки на корректность.

double CheckDouble() {
    double Check;
    cin >> Check;
    while (getchar() != '\n') { // Функция getchar возвращает следующий символ из стандартного потока ввода
        while (cin.fail()) { //проверка на ошибку предыдущего ввода со стандартного ввода (с консоли, например вместо числа ввел строку)
            cin.ignore();// Метод cin.ignore предназначен для извлечения символов из входного потока (cin). Извлеченные символы игнорируются и не используются.
            cin.clear(); // Для очистки внутреннего состояния потока. После использования cin.clear внутреннее состояние снова устанавливается на goodbit, что означает отсутствие "ошибок"
            while (getchar() != '\n');
            cout << "Ошибка ввода, значение содержит неподходящий символ. Введите число заново:" << endl;
            cin >> Check;
        }
    }
    return Check;
}

// Функция PrintArray()
// Назначение:
//  Функция PrintArray служит для отображения содержимого вектора типа double на консоль.
//  Она выводит каждый элемент вектора, разделяя их табуляцией, и в конце добавляет перенос строки.
// Входные данные:
//  Ссылка на вектор с элементами типа double, который необходимо вывести.
// Результаты:
//  Элементы вектора выводятся в консоль, каждый элемент разделяется табуляцией.

void PrintArray(vector<double>& arr) {
    for (int i = 0; i < arr.size(); i++) {
        cout << arr[i] << "\t";
    }
    cout << endl;
}